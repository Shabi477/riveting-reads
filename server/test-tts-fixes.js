#!/usr/bin/env node

// Test script to verify the ElevenLabs TTS alignment fixes
// This tests the critical fixes for character alignment bug

const { ElevenLabsService } = require('./src/services/elevenLabsService');

const SPANISH_TEST_TEXT = `
CAP√çTULO 1: LA AVENTURA COMIENZA

Mar√≠a era una ni√±a muy curiosa que viv√≠a en un peque√±o pueblo cerca de las monta√±as. Cada ma√±ana, se despertaba temprano para ayudar a su abuela en el jard√≠n. Las flores eran hermosas y los p√°jaros cantaban alegremente.

Un d√≠a, mientras caminaba por el bosque, encontr√≥ una puerta misteriosa entre los √°rboles. La puerta era muy antigua y ten√≠a grabados extra√±os. Mar√≠a decidi√≥ abrirla con mucho cuidado.

CAP√çTULO 2: EL MUNDO M√ÅGICO

Al abrir la puerta, Mar√≠a descubri√≥ un mundo completamente diferente. Todo brillaba con colores que nunca hab√≠a visto antes. Los √°rboles hablaban en susurros y las flores bailaban con el viento.

En este lugar m√°gico, conoci√≥ a un peque√±o zorro dorado que se llamaba Estrella. Estrella le explic√≥ que este era un reino especial donde los animales y las plantas viv√≠an en perfecta armon√≠a.

"Bienvenida al Reino de los Sue√±os", dijo Estrella con una sonrisa. "Aqu√≠, todos los deseos buenos se pueden hacer realidad si tienes un coraz√≥n puro y valiente."
`.trim();

async function testTTSFixes() {
  console.log('üß™ TESTING TTS ALIGNMENT FIXES');
  console.log('=====================================');
  
  try {
    const elevenLabsService = new ElevenLabsService();
    
    console.log(`üìä Test Input:`);
    console.log(`   Text length: ${SPANISH_TEST_TEXT.length} characters`);
    console.log(`   Word count: ${SPANISH_TEST_TEXT.split(/\s+/).length} words`);
    console.log(`   Expected duration: 8-12 minutes (0.5-0.7 words/second)`);
    
    console.log(`\nüîß Starting TTS generation with fixes...`);
    const result = await elevenLabsService.generateAudioWithTiming(
      SPANISH_TEST_TEXT, 
      'test_alignment_fixes'
    );
    
    console.log(`\n‚úÖ RESULTS:`);
    console.log(`   Audio URL: ${result.audioUrl}`);
    console.log(`   Total duration: ${result.timingData.totalDuration.toFixed(2)} seconds (${(result.timingData.totalDuration/60).toFixed(2)} minutes)`);
    console.log(`   Word count: ${result.timingData.words.length} words`);
    console.log(`   Speech rate: ${(result.timingData.words.length / result.timingData.totalDuration).toFixed(2)} words/second`);
    console.log(`   Character alignment: input=${SPANISH_TEST_TEXT.length}, aligned=${result.timingData.charAlignment.chars.length}`);
    
    // Validate fixes
    const isValidDuration = result.timingData.totalDuration > 480; // > 8 minutes
    const isValidSpeechRate = (result.timingData.words.length / result.timingData.totalDuration) < 1.0; // < 1 word/sec
    const hasGoodAlignment = result.timingData.charAlignment.chars.length > (SPANISH_TEST_TEXT.length * 0.8); // 80% char alignment
    
    console.log(`\nüîç VALIDATION:`);
    console.log(`   ‚úì Duration > 8 minutes: ${isValidDuration ? '‚úÖ PASS' : '‚ùå FAIL'}`);
    console.log(`   ‚úì Speech rate < 1.0 w/s: ${isValidSpeechRate ? '‚úÖ PASS' : '‚ùå FAIL'}`);
    console.log(`   ‚úì Character alignment: ${hasGoodAlignment ? '‚úÖ PASS' : '‚ùå FAIL'}`);
    
    if (isValidDuration && isValidSpeechRate && hasGoodAlignment) {
      console.log(`\nüéâ ALL FIXES WORKING! The alignment bug has been resolved.`);
    } else {
      console.log(`\n‚ö†Ô∏è  Some issues remain. Check the logs for details.`);
    }
    
    // Sample word timings
    console.log(`\nüìù Sample word timings:`);
    result.timingData.words.slice(0, 5).forEach(word => {
      console.log(`   "${word.text}": ${word.startTime.toFixed(2)}s - ${word.endTime.toFixed(2)}s`);
    });
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
    console.error('Stack trace:', error.stack);
  }
}

// Run the test
testTTSFixes().catch(console.error);